{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "keras_neuronal_network.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WdFFHhhNM5Jj",
        "colab_type": "text"
      },
      "source": [
        "# Keras"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dw5kUoq5M7b8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "outputId": "f151f2fd-6424-4c4e-d036-cd535bdc9098"
      },
      "source": [
        "#we import necessary libraries\n",
        "\n",
        "import numpy as np\n",
        "import scipy as sc\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "from sklearn.datasets import make_circles\n",
        "\n",
        "# We create our artificial data, where we will try to classify\n",
        "# two concentric rings of data. \n",
        "X, Y = make_circles(n_samples=500, factor=0.5, noise=0.05)\n",
        "\n",
        "# Resolution of the prediction map.\n",
        "res = 100 \n",
        "\n",
        "# Coordinates of the prediction map.\n",
        "_x0 = np.linspace(-1.5, 1.5, res)\n",
        "_x1 = np.linspace(-1.5, 1.5, res)\n",
        "\n",
        "# Input with each coordinate combo of the prediction map.\n",
        "_pX = np.array(np.meshgrid(_x0, _x1)).T.reshape(-1, 2)\n",
        "\n",
        "# Empty object to 0.5 of the prediction map.\n",
        "_pY = np.zeros((res, res)) + 0.5\n",
        "\n",
        "# Display of the prediction map.\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.pcolormesh(_x0, _x1, _pY, cmap=\"coolwarm\", vmin=0, vmax=1)\n",
        "\n",
        "# Visualization of the data cloud.\n",
        "plt.scatter(X[Y == 0,0], X[Y == 0,1], c=\"skyblue\")\n",
        "plt.scatter(X[Y == 1,0], X[Y == 1,1], c=\"salmon\")\n",
        "\n",
        "plt.tick_params(labelbottom=False, labelleft=False)"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 576x576 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4KNmOQkmNT8r",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "55526870-9396-4833-8690-8c0640e2c50a"
      },
      "source": [
        "import tensorflow as tf\n",
        "import tensorflow.keras as kr\n",
        "\n",
        "from IPython.core.display import display, HTML\n",
        "\n",
        "\n",
        "lr = 0.01           # learning rate\n",
        "nn = [2, 16, 8, 1]  # Number of neurons per layer.\n",
        "\n",
        "\n",
        "# We create the object that will contain our neural network, as\n",
        "# sequence of layers.\n",
        "model = kr.Sequential()\n",
        "\n",
        "# add layer 1\n",
        "l1 = model.add(kr.layers.Dense(nn[1], activation='relu'))\n",
        "\n",
        "# add layer 2\n",
        "l2 = model.add(kr.layers.Dense(nn[2], activation='relu'))\n",
        "\n",
        "# add layer 3\n",
        "l3 = model.add(kr.layers.Dense(nn[3], activation='sigmoid'))\n",
        "\n",
        "# We compile the model, defining the cost function and the optimizer.\n",
        "model.compile(loss='mse', optimizer=kr.optimizers.SGD(lr=0.05), metrics=['acc'])\n",
        "\n",
        "#And we train the model. The callbacks\n",
        "model.fit(X, Y, epochs=100)"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "500/500 [==============================] - 0s 134us/sample - loss: 0.2660 - acc: 0.5000\n",
            "Epoch 2/100\n",
            "500/500 [==============================] - 0s 46us/sample - loss: 0.2641 - acc: 0.4440\n",
            "Epoch 3/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2627 - acc: 0.3940\n",
            "Epoch 4/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2613 - acc: 0.4020\n",
            "Epoch 5/100\n",
            "500/500 [==============================] - 0s 47us/sample - loss: 0.2601 - acc: 0.3980\n",
            "Epoch 6/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.2589 - acc: 0.3600\n",
            "Epoch 7/100\n",
            "500/500 [==============================] - 0s 41us/sample - loss: 0.2565 - acc: 0.2860\n",
            "Epoch 8/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2547 - acc: 0.2860\n",
            "Epoch 9/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.2539 - acc: 0.3000\n",
            "Epoch 10/100\n",
            "500/500 [==============================] - 0s 47us/sample - loss: 0.2533 - acc: 0.3260\n",
            "Epoch 11/100\n",
            "500/500 [==============================] - 0s 50us/sample - loss: 0.2528 - acc: 0.3460\n",
            "Epoch 12/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2523 - acc: 0.3660\n",
            "Epoch 13/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.2519 - acc: 0.3680\n",
            "Epoch 14/100\n",
            "500/500 [==============================] - 0s 43us/sample - loss: 0.2516 - acc: 0.3680\n",
            "Epoch 15/100\n",
            "500/500 [==============================] - 0s 46us/sample - loss: 0.2513 - acc: 0.3800\n",
            "Epoch 16/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.2511 - acc: 0.3820\n",
            "Epoch 17/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2508 - acc: 0.3920\n",
            "Epoch 18/100\n",
            "500/500 [==============================] - 0s 40us/sample - loss: 0.2507 - acc: 0.4120\n",
            "Epoch 19/100\n",
            "500/500 [==============================] - 0s 42us/sample - loss: 0.2504 - acc: 0.4200\n",
            "Epoch 20/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2502 - acc: 0.4360\n",
            "Epoch 21/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.2500 - acc: 0.4600\n",
            "Epoch 22/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2498 - acc: 0.4160\n",
            "Epoch 23/100\n",
            "500/500 [==============================] - 0s 43us/sample - loss: 0.2496 - acc: 0.4460\n",
            "Epoch 24/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.2494 - acc: 0.4360\n",
            "Epoch 25/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.2491 - acc: 0.4440\n",
            "Epoch 26/100\n",
            "500/500 [==============================] - 0s 47us/sample - loss: 0.2489 - acc: 0.4480\n",
            "Epoch 27/100\n",
            "500/500 [==============================] - 0s 47us/sample - loss: 0.2487 - acc: 0.4600\n",
            "Epoch 28/100\n",
            "500/500 [==============================] - 0s 52us/sample - loss: 0.2484 - acc: 0.4980\n",
            "Epoch 29/100\n",
            "500/500 [==============================] - 0s 57us/sample - loss: 0.2481 - acc: 0.5340\n",
            "Epoch 30/100\n",
            "500/500 [==============================] - 0s 62us/sample - loss: 0.2478 - acc: 0.5460\n",
            "Epoch 31/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.2476 - acc: 0.5600\n",
            "Epoch 32/100\n",
            "500/500 [==============================] - 0s 55us/sample - loss: 0.2473 - acc: 0.5740\n",
            "Epoch 33/100\n",
            "500/500 [==============================] - 0s 43us/sample - loss: 0.2470 - acc: 0.5820\n",
            "Epoch 34/100\n",
            "500/500 [==============================] - 0s 42us/sample - loss: 0.2467 - acc: 0.6060\n",
            "Epoch 35/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2463 - acc: 0.5920\n",
            "Epoch 36/100\n",
            "500/500 [==============================] - 0s 46us/sample - loss: 0.2459 - acc: 0.5940\n",
            "Epoch 37/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.2456 - acc: 0.6140\n",
            "Epoch 38/100\n",
            "500/500 [==============================] - 0s 54us/sample - loss: 0.2453 - acc: 0.6200\n",
            "Epoch 39/100\n",
            "500/500 [==============================] - 0s 57us/sample - loss: 0.2450 - acc: 0.6340\n",
            "Epoch 40/100\n",
            "500/500 [==============================] - 0s 43us/sample - loss: 0.2448 - acc: 0.6240\n",
            "Epoch 41/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.2445 - acc: 0.6200\n",
            "Epoch 42/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2442 - acc: 0.6260\n",
            "Epoch 43/100\n",
            "500/500 [==============================] - 0s 47us/sample - loss: 0.2440 - acc: 0.6260\n",
            "Epoch 44/100\n",
            "500/500 [==============================] - 0s 54us/sample - loss: 0.2436 - acc: 0.6280\n",
            "Epoch 45/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2432 - acc: 0.6300\n",
            "Epoch 46/100\n",
            "500/500 [==============================] - 0s 55us/sample - loss: 0.2429 - acc: 0.6300\n",
            "Epoch 47/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2425 - acc: 0.6300\n",
            "Epoch 48/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.2421 - acc: 0.6380\n",
            "Epoch 49/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.2417 - acc: 0.6340\n",
            "Epoch 50/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.2412 - acc: 0.6440\n",
            "Epoch 51/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.2407 - acc: 0.6340\n",
            "Epoch 52/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.2402 - acc: 0.6540\n",
            "Epoch 53/100\n",
            "500/500 [==============================] - 0s 50us/sample - loss: 0.2397 - acc: 0.6420\n",
            "Epoch 54/100\n",
            "500/500 [==============================] - 0s 57us/sample - loss: 0.2392 - acc: 0.6560\n",
            "Epoch 55/100\n",
            "500/500 [==============================] - 0s 46us/sample - loss: 0.2386 - acc: 0.6560\n",
            "Epoch 56/100\n",
            "500/500 [==============================] - 0s 50us/sample - loss: 0.2380 - acc: 0.6740\n",
            "Epoch 57/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.2374 - acc: 0.6600\n",
            "Epoch 58/100\n",
            "500/500 [==============================] - 0s 43us/sample - loss: 0.2368 - acc: 0.6580\n",
            "Epoch 59/100\n",
            "500/500 [==============================] - 0s 59us/sample - loss: 0.2362 - acc: 0.6760\n",
            "Epoch 60/100\n",
            "500/500 [==============================] - 0s 50us/sample - loss: 0.2355 - acc: 0.6800\n",
            "Epoch 61/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.2349 - acc: 0.6720\n",
            "Epoch 62/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2341 - acc: 0.6860\n",
            "Epoch 63/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2333 - acc: 0.7000\n",
            "Epoch 64/100\n",
            "500/500 [==============================] - 0s 46us/sample - loss: 0.2325 - acc: 0.6960\n",
            "Epoch 65/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.2317 - acc: 0.7040\n",
            "Epoch 66/100\n",
            "500/500 [==============================] - 0s 54us/sample - loss: 0.2308 - acc: 0.7080\n",
            "Epoch 67/100\n",
            "500/500 [==============================] - 0s 62us/sample - loss: 0.2299 - acc: 0.7140\n",
            "Epoch 68/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2289 - acc: 0.7220\n",
            "Epoch 69/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2278 - acc: 0.7380\n",
            "Epoch 70/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2266 - acc: 0.7340\n",
            "Epoch 71/100\n",
            "500/500 [==============================] - 0s 58us/sample - loss: 0.2254 - acc: 0.7500\n",
            "Epoch 72/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2242 - acc: 0.7660\n",
            "Epoch 73/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.2229 - acc: 0.7720\n",
            "Epoch 74/100\n",
            "500/500 [==============================] - 0s 50us/sample - loss: 0.2216 - acc: 0.7960\n",
            "Epoch 75/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.2201 - acc: 0.8040\n",
            "Epoch 76/100\n",
            "500/500 [==============================] - 0s 47us/sample - loss: 0.2187 - acc: 0.8140\n",
            "Epoch 77/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2172 - acc: 0.8320\n",
            "Epoch 78/100\n",
            "500/500 [==============================] - 0s 57us/sample - loss: 0.2157 - acc: 0.8480\n",
            "Epoch 79/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.2140 - acc: 0.8420\n",
            "Epoch 80/100\n",
            "500/500 [==============================] - 0s 52us/sample - loss: 0.2123 - acc: 0.8480\n",
            "Epoch 81/100\n",
            "500/500 [==============================] - 0s 65us/sample - loss: 0.2105 - acc: 0.8600\n",
            "Epoch 82/100\n",
            "500/500 [==============================] - 0s 46us/sample - loss: 0.2086 - acc: 0.8660\n",
            "Epoch 83/100\n",
            "500/500 [==============================] - 0s 46us/sample - loss: 0.2066 - acc: 0.8680\n",
            "Epoch 84/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.2046 - acc: 0.8660\n",
            "Epoch 85/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.2024 - acc: 0.8840\n",
            "Epoch 86/100\n",
            "500/500 [==============================] - 0s 54us/sample - loss: 0.2001 - acc: 0.8940\n",
            "Epoch 87/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.1977 - acc: 0.9000\n",
            "Epoch 88/100\n",
            "500/500 [==============================] - 0s 51us/sample - loss: 0.1952 - acc: 0.9100\n",
            "Epoch 89/100\n",
            "500/500 [==============================] - 0s 47us/sample - loss: 0.1926 - acc: 0.9140\n",
            "Epoch 90/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.1898 - acc: 0.9160\n",
            "Epoch 91/100\n",
            "500/500 [==============================] - 0s 42us/sample - loss: 0.1869 - acc: 0.9200\n",
            "Epoch 92/100\n",
            "500/500 [==============================] - 0s 45us/sample - loss: 0.1840 - acc: 0.9220\n",
            "Epoch 93/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.1808 - acc: 0.9280\n",
            "Epoch 94/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.1774 - acc: 0.9280\n",
            "Epoch 95/100\n",
            "500/500 [==============================] - 0s 50us/sample - loss: 0.1740 - acc: 0.9320\n",
            "Epoch 96/100\n",
            "500/500 [==============================] - 0s 48us/sample - loss: 0.1702 - acc: 0.9420\n",
            "Epoch 97/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.1664 - acc: 0.9420\n",
            "Epoch 98/100\n",
            "500/500 [==============================] - 0s 49us/sample - loss: 0.1623 - acc: 0.9460\n",
            "Epoch 99/100\n",
            "500/500 [==============================] - 0s 43us/sample - loss: 0.1582 - acc: 0.9500\n",
            "Epoch 100/100\n",
            "500/500 [==============================] - 0s 44us/sample - loss: 0.1540 - acc: 0.9520\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7f657c42fe80>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yI2aHZQ7PNr8",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}